#summary Lists some ideas for programs that would benefit from cjklib

= Introduction =

To help you understand where something like cjklib would be useful, here are a few example applications envisioned by the developers during the creation process.

= Potential Applications =

*Romanization of Han characters in a larger project 

When something like conversion to pinyin is required in a software project, usually a "hacky" solution is put in place that is "good enough." Rather than reduplicating the effort in creating a new hacky solution, cjklib can be easily used in many of these situations to provide high quality, high reliability romanization. 

* Dictionary programs

  * [http://code.google.com/p/eclectus/ Eclectus] a small Han character dictionary for learners.

* Useage of character decomposition:

  * [http://www.tegaki.org Tegaki] handwriting recognition uses cjklib to bootstrap handwriting models for Traditional Chinese using models from character components.

* Something having to do with stroke order:

  * [http://github.com/cburgmer/hwr/commits/strokes Single stroke recognition with Tegaki]: using stroke order data, stroke handwriting models can be created from existing character data.
  * IMEs (Input method editor) like ibus and SCIM can use stroke order data to provide a stroke order input similar to mobile phones.

* Consistence checks of dictionary

Use Pinyin romanization handling and data from Unicode's Unihan to crosscheck CEDICT and HanDeDict's entries. Example script: [http://code.google.com/p/cjklib/source/browse/trunk/examples/checkcedict.py trunk/examples/checkcedict.py], list of possibly wrong entries: http://cburgmer.nfshost.com/content/consistency-check-cedict-unihan-pinyin-pronunciations

* Other ideas?  